using Ei;
using WHAL_Int.EggIncApi;
using WHAL_Int.Formatter;
using WHAL_Int.Maj;

namespace WHAL_Int;
internal class Program
{
    public static async Task Main(string[] args)
    {
        if (string.IsNullOrEmpty(Config.EID))
        {
            Console.WriteLine("\"EID.txt\" not found in root directory, please create the file and only put your EID in the file.");
            return;
        }

        string testContractId = "valentines-buildup-2024";
        var coopCodes = new List<string> { "valley693", "bryony063", "lawyer796", "trophy331", "entire519" };

        var activeContract = await new ActiveContractBuilder(testContractId).Build();

        var tasks = new List<Task<Coop>>();
        foreach (string coopCode in coopCodes)
        {
            tasks.Add(activeContract.AddCoop(coopCode));
        }

        var coops = await Task.WhenAll(tasks);
        var orderedCoops = coops.OrderBy(x => x);

        var srucTable = new Table<Coop>();
        srucTable.AddColumn("`  Coop   ",   (coop => $"[⧉](<https://eicoop-carpet.netlify.app/{coop.ContractId}/{coop.CoopId}>)`{coop.StrippedCoopId} "));
        srucTable.AddColumn(" Boosted ",    (coop => $"{coop.BoostedCount}"), 9);
        srucTable.AddColumn(" Tokens ",     (coop => $"{coop.TotalTokens}"), 8);
        srucTable.AddColumn(" Duration ",   (coop => coop.PredictedDuration.DurationInSeconds < 8640000 ? coop.PredictedDuration.Format() : "too long"), 10);
        srucTable.AddColumn(" Finish`",     (coop => $"`{coop.PredictedCompletionTimeUnix.Format(DiscordTimestampDisplay.FullDateTime)}"));

        foreach (var coop in orderedCoops) { srucTable.AddDataPoint(coop); }

        var discordTimestampNow = new DiscordTimestamp(DateTimeOffset.UtcNow.ToUnixTimeSeconds());

        Console.OutputEncoding = System.Text.Encoding.UTF8;
        Console.WriteLine($"""
            Last updated: {discordTimestampNow.Format(DiscordTimestampDisplay.Relative)}

            {srucTable.GetTable()}
            `Primary order based off of duration`

            *`!!sruc` to summon an update!*
            *Note that this is NOT a Wonky command, and is still generated by WHAL-Int*
            """);
    }
}
