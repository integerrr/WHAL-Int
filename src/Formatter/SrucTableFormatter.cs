using Ei;
using WHAL_Int.Maj;

namespace WHAL_Int.Formatter;

public class SrucTableFormatter : IContractFormatter, IDiscordTableCenteredTextFormatter
{
    public string Format(ActiveContract activeContract)
    {
        string str = "";
        str += $"# {activeContract.Contract.Name} | Speedrun Leaderboard\n";

        var now = new DiscordTimestamp(DateTimeOffset.UtcNow.ToUnixTimeSeconds());
        str += $"Last update: {now.Format(DiscordTimestampDisplay.Relative)}\n\n";
        str += "`  Coop   | Boosted | Tokens |  Duration  | Finish `\n";

        foreach (var coop in activeContract.Coops)
        {
            str += $"[\u29c9](<https://eicoop-carpet.netlify.app/{coop.ContractId}/{coop.CoopId}>)`{coop.StrippedCoopId} |";
            str += CenteredText(coop.BoostedCount.ToString(), 9) + "|";
            str += CenteredText(coop.TotalTokens.ToString(), 8) + "|";
            str += CenteredText(coop.PredictedDuration.Format(), 12) + "|`";
            str += CenteredText(coop.PredictedCompletionTimeUnix.Format(DiscordTimestampDisplay.FullDateTime), 11);
            str += "\n";
        }

        str += "`Primary order based off of duration`\n";
        str += "*`!!sruc` to summon an update!*\n";
        str += "*Note that this is NOT a Wonky command, and was generated by WHAL-Int*\n";
        return str;
    }

    public string CenteredText(string s, int width)
    {
        if (s.Length >= width) return s;

        int leftPad = (width - s.Length) / 2;
        int rightPad = width - s.Length - leftPad;
        return new string(' ', leftPad) + s + new string(' ', rightPad);
    }
}
